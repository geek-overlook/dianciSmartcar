C251 COMPILER V5.60.0,  SEEKFREE_DL1B                                                      28/11/24  18:50:35  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_DL1B
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_DL1B.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_DL1B.c XSMALL WARNINGLEVE
                    -L(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfr
                    -ee_peripheral;..\CODE;..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;.\Out_File) DEBUG PRINT(.\Out_File\SEE
                    -KFREE_DL1B.lst) TABS(2) OBJECT(.\Out_File\SEEKFREE_DL1B.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2021,逐飞科技
    4           * All rights reserved.
    5           *
    6           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    7           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    8           *
    9           * @file          DL1B
   10           * @company       成都逐飞科技有限公司
   11           * @author        逐飞科技(QQ3184284598)
   12           * @version       查看doc内version文件 版本说明
   13           * @Software    MDK FOR C251 V5.60
   14           * @Target core   STC32F12K
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2021-08-27
   17           * @note    
   18           * 接线定义：
   19           *                   ------------------------------------
   20           *                   模块管脚            单片机管脚
   21           *                   SCL                 查看 SEEKFREE_DL1B.h 中 DL1B_SCL_PIN   宏定义
   22           *                   SDA                 查看 SEEKFREE_DL1B.h 中 DL1B_SDA_PIN   宏定义
   23           *           XS          查看 SEEKFREE_DL1B.h 中 DL1B_XSHUT_PIN 宏定义
   24           *                   VCC                 5V 电源
   25           *                   GND                 电源地
   26           *                   ------------------------------------
   27          *********************************************************************************************************
             -***********/
   28          
   29          #include "zf_delay.h"
   30          #include "SEEKFREE_DL1B.h"
   31          #include "SEEKFREE_CONFIG.h"
   32          
   33          uint8 dl1b_init_flag = 0;
   34          uint8 dl1b_finsh_flag = 0;
   35          uint16 dl1b_distance_mm = 8192;
   36          
   37          
   38          
   39          #define dl1b_transfer_8bit_array(tdata, tlen, rdata, rlen)      (dl1b_iic_transfer_8bit_array((tdata), (t
             -len), (rdata), (rlen)))
   40          
   41          
   42          #define GET_DL1B_SDA          DL1B_SDA_PIN
   43          #define DL1B_SDA_LOW()            DL1B_SDA_PIN = 0    //IO口输出低电平
   44          #define DL1B_SDA_HIGH()           DL1B_SDA_PIN = 1    //IO口输出高电平
   45          
   46          #define DL1B_SCL_LOW()            DL1B_SCL_PIN = 0    //IO口输出低电平
   47          #define DL1B_SCL_HIGH()           DL1B_SCL_PIN = 1    //IO口输出高电平
   48          
   49          #define ack 1      //主应答
   50          #define no_ack 0   //从应答  
   51          
   52          //-------------------------------------------------------------------------------------------------------
             -------------
C251 COMPILER V5.60.0,  SEEKFREE_DL1B                                                      28/11/24  18:50:35  PAGE 2   

   53          //  @brief      模拟IIC延时
   54          //  @return     void            
   55          //  @since      v1.0
   56          //  Sample usage:       如果IIC通讯失败可以尝试增加j的值
   57          //-------------------------------------------------------------------------------------------------------
             -------------
   58          static void dl1b_simiic_delay(void)
   59          {
   60   1          uint16 j=DL1B_SOFT_IIC_DELAY;   
   61   1        while(j--);
   62   1      }
   63          
   64          //内部使用，用户无需调用
   65          static void dl1b_simiic_start(void)
   66          {
   67   1        DL1B_SDA_HIGH();
   68   1        DL1B_SCL_HIGH();
   69   1        dl1b_simiic_delay();
   70   1        DL1B_SDA_LOW();
   71   1        dl1b_simiic_delay();
   72   1        DL1B_SCL_LOW();
   73   1      }
   74          
   75          //内部使用，用户无需调用
   76          static void dl1b_simiic_stop(void)
   77          {
   78   1        DL1B_SDA_LOW();
   79   1        DL1B_SCL_LOW();
   80   1        dl1b_simiic_delay();
   81   1        DL1B_SCL_HIGH();
   82   1        dl1b_simiic_delay();
   83   1        DL1B_SDA_HIGH();
   84   1        dl1b_simiic_delay();
   85   1      }
   86          
   87          //主应答(包含ack:SDA=0和no_ack:SDA=0)
   88          //内部使用，用户无需调用
   89          static void dl1b_simiic_sendack(unsigned char ack_dat)
   90          {
   91   1          DL1B_SCL_LOW();
   92   1        dl1b_simiic_delay();
   93   1        if(ack_dat) DL1B_SDA_LOW();
   94   1          else      DL1B_SDA_HIGH();
   95   1      
   96   1          DL1B_SCL_HIGH();
   97   1          dl1b_simiic_delay();
   98   1          DL1B_SCL_LOW();
   99   1          dl1b_simiic_delay();
  100   1      }
  101          
  102          
  103          static int dl1b_sccb_waitack(void)
  104          {
  105   1          DL1B_SCL_LOW();
  106   1      
  107   1        dl1b_simiic_delay();
  108   1        
  109   1        DL1B_SCL_HIGH();
  110   1          dl1b_simiic_delay();
  111   1        
  112   1          if(GET_DL1B_SDA)           //应答为高电平，异常，通信失败
  113   1          {
  114   2      
  115   2              DL1B_SCL_LOW();
  116   2              return 0;
  117   2          }
C251 COMPILER V5.60.0,  SEEKFREE_DL1B                                                      28/11/24  18:50:35  PAGE 3   

  118   1      
  119   1          DL1B_SCL_LOW();
  120   1        dl1b_simiic_delay();
  121   1          return 1;
  122   1      }
  123          
  124          //字节发送程序
  125          //发送c(可以是数据也可是地址)，送完后接收从应答
  126          //不考虑从应答位
  127          //内部使用，用户无需调用
  128          static void dl1b_send_ch(uint8 c)
  129          {
  130   1        uint8 i = 8;
  131   1          while(i--)
  132   1          {
  133   2              if(c & 0x80)  DL1B_SDA_HIGH();//SDA 输出数据
  134   2              else      DL1B_SDA_LOW();
  135   2              c <<= 1;
  136   2              dl1b_simiic_delay();
  137   2              DL1B_SCL_HIGH();                //SCL 拉高，采集信号
  138   2              dl1b_simiic_delay();
  139   2              DL1B_SCL_LOW();                //SCL 时钟线拉低
  140   2          }
  141   1        dl1b_sccb_waitack();
  142   1      }
  143          
  144          
  145          //字节接收程序
  146          //接收器件传来的数据，此程序应配合|主应答函数|使用
  147          //内部使用，用户无需调用
  148          static uint8 dl1b_read_ch(uint8 ack_x)
  149          {
  150   1          uint8 i;
  151   1          uint8 c;
  152   1          c=0;
  153   1          DL1B_SCL_LOW();
  154   1          dl1b_simiic_delay();
  155   1          DL1B_SDA_HIGH();             
  156   1      
  157   1          for(i=0;i<8;i++)
  158   1          {
  159   2              dl1b_simiic_delay();
  160   2              DL1B_SCL_LOW();         //置时钟线为低，准备接收数据位
  161   2              dl1b_simiic_delay();
  162   2              DL1B_SCL_HIGH();         //置时钟线为高，使数据线上数据有效
  163   2              dl1b_simiic_delay();
  164   2              c<<=1;
  165   2              if(GET_DL1B_SDA) 
  166   2              {
  167   3                  c+=1;   //读数据位，将接收的数据存c
  168   3              }
  169   2          }
  170   1      
  171   1        DL1B_SCL_LOW();
  172   1        dl1b_simiic_delay();
  173   1        dl1b_simiic_sendack(ack_x);
  174   1        
  175   1          return c;
  176   1      }
  177          
  178          
  179          //-------------------------------------------------------------------------------------------------------
             -------------
  180          // 函数简介     软件 IIC 接口传输 8bit 数组 先写后读取
  181          // 参数说明     *write_data     发送数据存放缓冲区
  182          // 参数说明     write_len       发送缓冲区长度
C251 COMPILER V5.60.0,  SEEKFREE_DL1B                                                      28/11/24  18:50:35  PAGE 4   

  183          // 参数说明     *read_data      读取数据存放缓冲区
  184          // 参数说明     read_len        读取缓冲区长度
  185          // 返回参数     void            
  186          // 使用示例     iic_transfer_8bit_array(IIC_1, addr, data, 64, data, 64);
  187          // 备注信息     
  188          //-------------------------------------------------------------------------------------------------------
             -------------
  189          void dl1b_iic_transfer_8bit_array (const uint8 *write_data, uint32 write_len, uint8 *read_data, uint32 re
             -ad_len)
  190          {
  191   1      
  192   1          dl1b_simiic_start();
  193   1          dl1b_send_ch(DL1B_DEV_ADDR << 1);
  194   1          while(write_len --)
  195   1          {
  196   2              dl1b_send_ch(*write_data ++);
  197   2          }
  198   1          dl1b_simiic_start();
  199   1          dl1b_send_ch(DL1B_DEV_ADDR << 1 | 0x01);
  200   1          while(read_len --)
  201   1          {
  202   2          // 前面7位需要回复ack，最后1位不需要回复ack.
  203   2              *read_data ++ = dl1b_read_ch(read_len != 0);
  204   2          }
  205   1          dl1b_simiic_stop();
  206   1      }
  207          
  208          
  209          
  210          
  211          
  212          //-------------------------------------------------------------------------------------------------------
             -------------
  213          // 函数简介     返回以毫米为单位的范围读数
  214          // 参数说明     void
  215          // 返回参数     void
  216          // 使用示例     dl1b_get_distance();
  217          // 备注信息     在开始单次射程测量后也调用此函数
  218          //-------------------------------------------------------------------------------------------------------
             -------------
  219          void dl1b_get_distance (void)
  220          {
  221   1          if(dl1b_init_flag)
  222   1          {
  223   2              uint8 data_buffer[3];
  224   2              int16 dl1b_distance_temp = 0;
  225   2      
  226   2              data_buffer[0] = DL1B_GPIO__TIO_HV_STATUS >> 8;
  227   2              data_buffer[1] = DL1B_GPIO__TIO_HV_STATUS & 0xFF;
  228   2              dl1b_transfer_8bit_array(data_buffer, 2, &data_buffer[2], 1);
  229   2      
  230   2              if(data_buffer[2])
  231   2              {
  232   3      
  233   3                  data_buffer[0] = DL1B_SYSTEM__INTERRUPT_CLEAR >> 8;
  234   3                  data_buffer[1] = DL1B_SYSTEM__INTERRUPT_CLEAR & 0xFF;
  235   3                  data_buffer[2] = 0x01;
  236   3                  dl1b_transfer_8bit_array(data_buffer, 3, data_buffer, 0);// clear Interrupt
  237   3      
  238   3                  data_buffer[0] = DL1B_RESULT__RANGE_STATUS >> 8;
  239   3                  data_buffer[1] = DL1B_RESULT__RANGE_STATUS & 0xFF;
  240   3                  dl1b_transfer_8bit_array(data_buffer, 2, &data_buffer[2], 1);
  241   3                  
  242   3                  if(0x89 == data_buffer[2])
  243   3                  {
  244   4                      data_buffer[0] = DL1B_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0 >> 8;
C251 COMPILER V5.60.0,  SEEKFREE_DL1B                                                      28/11/24  18:50:35  PAGE 5   

  245   4                      data_buffer[1] = DL1B_RESULT__FINAL_CROSSTALK_CORRECTED_RANGE_MM_SD0 & 0xFF;
  246   4                      dl1b_transfer_8bit_array(data_buffer, 2, data_buffer, 2);
  247   4                      dl1b_distance_temp = data_buffer[0];
  248   4                      dl1b_distance_temp = (dl1b_distance_temp << 8) | data_buffer[1];
  249   4                      
  250   4                      if(dl1b_distance_temp > 4000 || dl1b_distance_temp < 0)
  251   4                      {
  252   5                          dl1b_distance_mm = 8192;
  253   5                          dl1b_finsh_flag = 0;
  254   5                      }
  255   4                      else
  256   4                      {
  257   5                          dl1b_distance_mm = dl1b_distance_temp;
  258   5                          dl1b_finsh_flag = 1;
  259   5                      }
  260   4                  }
  261   3                  else
  262   3                  {
  263   4                      dl1b_distance_mm = 8192;
  264   4                      dl1b_finsh_flag = 0;
  265   4                  }
  266   3              }
  267   2              else
  268   2              {
  269   3                  dl1b_distance_mm = 8192;
  270   3                  dl1b_finsh_flag = 0;
  271   3              }
  272   2          }
  273   1      }
  274          
  275          
  276          
  277          //-------------------------------------------------------------------------------------------------------
             -------------
  278          // 函数简介     初始化 DL1B
  279          // 参数说明     void
  280          // 返回参数     uint8           1-初始化失败 0-初始化成功
  281          // 使用示例     dl1b_init();
  282          // 备注信息
  283          //-------------------------------------------------------------------------------------------------------
             -------------
  284          uint8 dl1b_init (void)
  285          {
  286   1          uint8   return_state    = 0;
  287   1          uint8   data_buffer[2 + sizeof(dl1b_default_configuration)]; 
  288   1          uint16  time_out_count  = 0;
  289   1      
  290   1      
  291   1          do
  292   1          {
  293   2              delay_ms(50);
  294   2              DL1B_XS_PIN = 0;
  295   2              delay_ms(10);
  296   2              DL1B_XS_PIN = 1;
  297   2              delay_ms(50);
  298   2      
  299   2              data_buffer[0] = DL1B_FIRMWARE__SYSTEM_STATUS >> 8;
  300   2              data_buffer[1] = DL1B_FIRMWARE__SYSTEM_STATUS & 0xFF;
  301   2              dl1b_transfer_8bit_array(data_buffer, 2, &data_buffer[2], 1);
  302   2              return_state = (0x01 == (data_buffer[2] & 0x01)) ? (0) : (1);
  303   2              if(1 == return_state)
  304   2              {
  305   3                  break;
  306   3              }
  307   2      
  308   2              data_buffer[0] = DL1B_I2C_SLAVE__DEVICE_ADDRESS >> 8;
C251 COMPILER V5.60.0,  SEEKFREE_DL1B                                                      28/11/24  18:50:35  PAGE 6   

  309   2              data_buffer[1] = DL1B_I2C_SLAVE__DEVICE_ADDRESS & 0xFF;
  310   2              memcpy(&data_buffer[2], (uint8 *)dl1b_default_configuration, sizeof(dl1b_default_configuration));
  311   2              dl1b_transfer_8bit_array(data_buffer, 2 + sizeof(dl1b_default_configuration), data_buffer, 0);
  312   2      
  313   2              while(1)
  314   2              {
  315   3                  data_buffer[0] = DL1B_GPIO__TIO_HV_STATUS >> 8;
  316   3                  data_buffer[1] = DL1B_GPIO__TIO_HV_STATUS & 0xFF;
  317   3                  dl1b_transfer_8bit_array(data_buffer, 2, &data_buffer[2], 1);
  318   3                  if(0x00 == (data_buffer[2] & 0x01))
  319   3                  {
  320   4                      time_out_count = 0;
  321   4                      break;
  322   4                  }
  323   3                  if(DL1B_TIMEOUT_COUNT < time_out_count ++)
  324   3                  {
  325   4                      return_state = 1;
  326   4                      break;
  327   4                  }
  328   3                  delay_ms(1);
  329   3              }
  330   2      
  331   2              dl1b_init_flag = 1;
  332   2          }while(0);
  333   1      
  334   1      
  335   1          return return_state;
  336   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1024     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       173     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        16     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
