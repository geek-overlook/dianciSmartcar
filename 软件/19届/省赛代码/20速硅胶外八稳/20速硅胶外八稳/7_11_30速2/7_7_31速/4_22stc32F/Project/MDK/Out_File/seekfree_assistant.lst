C251 COMPILER V5.60.0,  seekfree_assistant                                                 15/07/24  23:30:48  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE seekfree_assistant
OBJECT MODULE PLACED IN .\Out_File\seekfree_assistant.obj
COMPILER INVOKED BY: D:\c51-keil\C251\BIN\C251.EXE ..\..\Libraries\seekfree_components\seekfree_assistant.c XSMALL WARNI
                    -NGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\
                    -seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;.\Out_File) DEBUG PRINT(.\Out_Fi
                    -le\seekfree_assistant.lst) TABS(2) OBJECT(.\Out_File\seekfree_assistant.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file          seekfree_assistant
   11           * @company       成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ790875685)
   13           * @version       查看doc内version文件 版本说明
   14           * @Software    MDK FOR C251 V5.60
   15           * @Target core   STC32G12K128
   16           * @Taobao      https://seekfree.taobao.com/
   17           * @date          2020-12-18
   18           ********************************************************************************************************
             -************/
   19           
   20          
   21          #include "seekfree_assistant.h"
   22          
   23          seekfree_assistant_oscilloscope_struct          seekfree_assistant_oscilloscope_data;                    
             -     // 虚拟示波器数据
   24          
   25          
   26          static fifo_struct      seekfree_assistant_fifo;
   27          static uint8            seekfree_assistant_buffer[SEEKFREE_ASSISTANT_BUFFER_SIZE];                  // 数据
             -存放数组
   28          float                   seekfree_assistant_parameter[SEEKFREE_ASSISTANT_SET_PARAMETR_COUNT] = {0};      //
             - 保存接收到的参数
   29          vuint8          seekfree_assistant_parameter_update_flag[SEEKFREE_ASSISTANT_SET_PARAMETR_COUNT] = {0};
   30          //-------------------------------------------------------------------------------------------------------
             -------------
   31          // 函数简介     逐飞助手求和函数
   32          // 参数说明     *buffer         需要校验的数据地址
   33          // 参数说明     length          校验长度
   34          // 返回参数     uint8           和值
   35          // 使用示例
   36          //-------------------------------------------------------------------------------------------------------
             -------------
   37          static uint8 seekfree_assistant_sum (uint8 *buffer, uint32 length)
   38          {
   39   1          uint8 temp_sum = 0;
   40   1      
   41   1          while(length--)
   42   1          {
   43   2              temp_sum += *buffer++;
   44   2          }
   45   1      
   46   1          return temp_sum;
   47   1      }
   48          
   49          
C251 COMPILER V5.60.0,  seekfree_assistant                                                 15/07/24  23:30:48  PAGE 2   

   50          //-------------------------------------------------------------------------------------------------------
             -------------
   51          // 函数简介     逐飞助手 虚拟示波器发送函数
   52          // 参数说明     *seekfree_assistant_oscilloscope  示波器数据结构体
   53          // 返回参数     void
   54          // 使用示例     seekfree_assistant_oscilloscope_send(&seekfree_assistant_oscilloscope_data);
   55          //-------------------------------------------------------------------------------------------------------
             -------------
   56          void seekfree_assistant_oscilloscope_send (seekfree_assistant_oscilloscope_struct *seekfree_assistant_osc
             -illoscope)
   57          {
   58   1          uint8 packet_size;
   59   1        uint8 i = 0;
   60   1        seekfree_assistant_oscilloscope_struct temp_oscilloscope;
   61   1        
   62   1        temp_oscilloscope.channel_num = seekfree_assistant_oscilloscope->channel_num & 0x0f;
   63   1        
   64   1        // 由于大小端不匹配，所以需要交换。
   65   1        for(i = 0; i < temp_oscilloscope.channel_num; i++)
   66   1        {
   67   2          ((uint8 *)&temp_oscilloscope.dat[i])[0] = ((uint8 *)&seekfree_assistant_oscilloscope->dat[i])[3];
   68   2          ((uint8 *)&temp_oscilloscope.dat[i])[1] = ((uint8 *)&seekfree_assistant_oscilloscope->dat[i])[2];
   69   2          ((uint8 *)&temp_oscilloscope.dat[i])[2] = ((uint8 *)&seekfree_assistant_oscilloscope->dat[i])[1];
   70   2          ((uint8 *)&temp_oscilloscope.dat[i])[3] = ((uint8 *)&seekfree_assistant_oscilloscope->dat[i])[0];
   71   2        }
   72   1      
   73   1          // 帧头
   74   1          temp_oscilloscope.head         = SEEKFREE_ASSISTANT_SEND_HEAD;
   75   1      
   76   1          // 写入包长度信息
   77   1          packet_size                     = sizeof(temp_oscilloscope) - (SEEKFREE_ASSISTANT_SET_OSCILLOSCOPE_CO
             -UNT - temp_oscilloscope.channel_num) * 4;
   78   1          temp_oscilloscope.length       = packet_size;
   79   1      
   80   1          // 写入功能字与通道数量
   81   1          temp_oscilloscope.channel_num |= SEEKFREE_ASSISTANT_CAMERA_OSCILLOSCOPE;
   82   1      
   83   1          // 和校验计算
   84   1          temp_oscilloscope.check_sum    = 0;
   85   1          temp_oscilloscope.check_sum    = seekfree_assistant_sum((uint8 *)&temp_oscilloscope, packet_size);
   86   1      
   87   1          // 数据在调用本函数之前，由用户将需要发送的数据写入temp_oscilloscope.data[]
   88   1      
   89   1          seekfree_assistant_transfer((const uint8 *)&temp_oscilloscope, packet_size);
   90   1      }
   91          
   92          
   93          //-------------------------------------------------------------------------------------------------------
             -------------
   94          // 函数简介     逐飞助手解析接收到的数据
   95          // 参数说明     void
   96          // 返回参数     void
   97          // 使用示例     函数只需要放到周期运行的PIT中断或者主循环即可
   98          //-------------------------------------------------------------------------------------------------------
             -------------
   99          void seekfree_assistant_data_analysis (void)
  100          {
  101   1          uint8  temp_sum;
  102   1          uint32 read_length;
  103   1          seekfree_assistant_parameter_struct *receive_packet;
  104   1      
  105   1          // 这里使用uint32进行定义，目的是为了保证数组四字节对齐
  106   1          uint32  temp_buffer[SEEKFREE_ASSISTANT_BUFFER_SIZE / 4];
  107   1      
  108   1        uint32 i = 0;
  109   1          // 尝试读取数据, 如果不是自定义的传输方式则从接收回调中读取数据
C251 COMPILER V5.60.0,  seekfree_assistant                                                 15/07/24  23:30:48  PAGE 3   

  110   1          read_length = seekfree_assistant_receive((uint8 *)temp_buffer, SEEKFREE_ASSISTANT_BUFFER_SIZE);
  111   1          if(read_length)
  112   1          {
  113   2              // 将读取到的数据写入FIFO
  114   2              fifo_write_buffer(&seekfree_assistant_fifo, (uint8 *)temp_buffer, read_length);
  115   2          }
  116   1      
  117   1          while(sizeof(seekfree_assistant_parameter_struct) <= fifo_used(&seekfree_assistant_fifo))
  118   1          {
  119   2              read_length = sizeof(seekfree_assistant_parameter_struct);
  120   2              fifo_read_buffer(&seekfree_assistant_fifo, (uint8 *)temp_buffer, &read_length, FIFO_READ_ONLY);
  121   2              if(SEEKFREE_ASSISTANT_RECEIVE_HEAD != ((uint8 *)temp_buffer)[0])
  122   2              {
  123   3                  // 没有帧头则从FIFO中去掉第一个数据
  124   3                  read_length = 1;
  125   3              }
  126   2              else
  127   2              {
  128   3                  // 找到帧头
  129   3                  receive_packet = (seekfree_assistant_parameter_struct *)temp_buffer;
  130   3                  temp_sum = receive_packet->check_sum;
  131   3                  receive_packet->check_sum = 0;
  132   3      
  133   3                  if(temp_sum == seekfree_assistant_sum((uint8 *)temp_buffer, sizeof(seekfree_assistant_paramet
             -er_struct)))
  134   3                  {
  135   4                      // 和校验成功保存数据
  136   4            
  137   4              // 由于大小端不匹配，所以需要交换。
  138   4              ((uint8 *)&seekfree_assistant_parameter[receive_packet->channel - 1])[3] = ((uint8 *)&receive_packet-
             ->dat)[0];
  139   4              ((uint8 *)&seekfree_assistant_parameter[receive_packet->channel - 1])[2] = ((uint8 *)&receive_packet-
             ->dat)[1];
  140   4              ((uint8 *)&seekfree_assistant_parameter[receive_packet->channel - 1])[1] = ((uint8 *)&receive_packet-
             ->dat)[2];
  141   4              ((uint8 *)&seekfree_assistant_parameter[receive_packet->channel - 1])[0] = ((uint8 *)&receive_packet-
             ->dat)[3];
  142   4              seekfree_assistant_parameter_update_flag[receive_packet->channel - 1] = 1;
  143   4                  }
  144   3                  else
  145   3                  {
  146   4                      read_length = 1;
  147   4                  }
  148   3              }
  149   2      
  150   2              // 丢弃无需使用的数据
  151   2              fifo_read_buffer(&seekfree_assistant_fifo, (uint8 *)temp_buffer, &read_length, FIFO_READ_AND_CLEA
             -N);
  152   2          }
  153   1      }
  154          
  155          //-------------------------------------------------------------------------------------------------------
             -------------
  156          // 函数简介     逐飞助手 初始化
  157          // 参数说明
  158          // 返回参数     void
  159          // 使用示例
  160          //-------------------------------------------------------------------------------------------------------
             -------------
  161          void seekfree_assistant_init ()
  162          {
  163   1          fifo_init(&seekfree_assistant_fifo,  FIFO_DATA_8BIT, seekfree_assistant_buffer, SEEKFREE_ASSISTANT_BU
             -FFER_SIZE);
  164   1      }
  165          
  166          
C251 COMPILER V5.60.0,  seekfree_assistant                                                 15/07/24  23:30:48  PAGE 4   



Module Information          Static   Overlayable
------------------------------------------------
  code size            =       774     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       419     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        48     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
